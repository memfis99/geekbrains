apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
spec:
  serviceName: prometheus
  replicas: 2
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      # `chown` the Prometheus  `/data` directory so that Prometheus can write to it
      initContainers:
      - image: busybox
        name: mount-permissions-fix
        command: ["sh", "-c", "chmod 777 /prometheus"]
        volumeMounts:
        - name: data-prometheus
          mountPath: /prometheus
      containers:
        - name: prometheus-server
          # Use the `quay.io/prometheus/prometheus:v2.11.1` image
          image: quay.io/prometheus/prometheus:v2.11.1
          imagePullPolicy: "IfNotPresent"
          args:
            - --config.file=/etc/prometheus/prometheus.yml
            #- --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          ports:
            - containerPort: 9090
          # Probe the `/-/ready` and `/-/healthy` endpoints
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 30
          # Based on 10 running nodes with 30 pods each
          # Resource requests of `200m` of CPU and `1000Mi` of memory
          resources:
            requests:
              cpu: 200m
              memory: 1000Mi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: data-prometheus
              mountPath: /prometheus
              subPath: ""
      terminationGracePeriodSeconds: 300
      volumes:
        # The Prometheus ConfigMap is mounted into the Pods as a volume at `/etc/config`
        - name: config-volume
          configMap:
            name: prometheus-config
#        - name: data-prometheus
#          persistentVolumeClaim:
#            claimName: claim-prometheus  
  volumeClaimTemplates:
  - metadata:
      name: data-prometheus
    spec:
      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: "local"
      resources:
        requests:
          storage: 5Gi